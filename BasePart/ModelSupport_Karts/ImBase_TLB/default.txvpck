<?xml version="1.0" encoding="utf-8"?>
<nodeSet version="1.0">
  <view uin="mennp5hzz44sszcho_v">
    <property name="$defaultDiagram" value="true" />
    <property name="$metaclass" value="Package Diagram" />
    <property name="$name" value="default" />
    <reference referencedUin="delphi:e_class:src:Karts:ImBase_TLB.CoImbaseTables">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.CoImbaseTables.Create()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.CoImbaseTables.CreateRemote(System.string)" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Karts:ImBase_TLB.OMPSync">
      <property name="$shortcutReference" value="true" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Karts:ImBase_TLB.ImbaseFieldDefs">
      <property name="$shortcutReference" value="true" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Karts:ImBase_TLB.IImbaseBlobsDisp">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseBlobsDisp.AddFromFile(System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseBlobsDisp.AddBlobRef(System.Integer)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseBlobsDisp.ReleaseBlob(System.Integer)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseBlobsDisp.UpdateBlob(System.Integer,System.WideString,Winapi.ActiveX.TOleEnum)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseBlobsDisp.ExtractBlob(System.Integer,out@System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseBlobsDisp.FindBlob(System.WideString,Winapi.ActiveX.TOleEnum)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseBlobsDisp.BlobName(System.Integer)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseBlobsDisp.AddFromData(System.WideString,System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseBlobsDisp.BlobExists(System.Integer)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseBlobsDisp.ExtractBlob2(System.Integer,out@System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseBlobsDisp.AddFromData2(System.OleVariant,System.WideString)" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Karts:ImBase_TLB.IImbaseFieldInfoDisp">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseFieldInfoDisp.FieldName" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseFieldInfoDisp.Name" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseFieldInfoDisp.ShortName" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseFieldInfoDisp.Units" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseFieldInfoDisp.Owner" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseFieldInfoDisp.Data" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseFieldInfoDisp.DataTypeEx" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseFieldInfoDisp.EnterMode" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.IImbaseFieldInfoDisp.Owner" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.IImbaseFieldInfoDisp.DataTypeEx" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.IImbaseFieldInfoDisp.EnterMode" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Karts:ImBase_TLB.IImbaseFolderDisp">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseFolderDisp.Application" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseFolderDisp.Parent" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseFolderDisp.Folders" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseFolderDisp.Catalog" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseFolderDisp.Add(System.WideString)" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseFolderDisp.Name" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseFolderDisp.Delete()" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseFolderDisp.SubFoldersCount" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseFolderDisp.Attributes" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseFolderDisp.Level" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseFolderDisp.Key" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseFolderDisp.Path" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseFolderDisp.ImageId" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseFolderDisp.NoteId" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseFolderDisp.Records" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseFolderDisp.Property_" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseFolderDisp.AddProperty()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseFolderDisp.Move(ImBase_TLB.IImbaseFolder)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseFolderDisp.AccessAdd(System.Integer,System.Integer,System.Integer)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseFolderDisp.AccessRemove(System.Integer)" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseFolderDisp.Sort" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.IImbaseFolderDisp.Application" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.IImbaseFolderDisp.Parent" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.IImbaseFolderDisp.Folders" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.IImbaseFolderDisp.Catalog" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.IImbaseFolderDisp.Records" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.IImbaseFolderDisp.Property_" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Karts:ImBase_TLB.ImbaseTable">
      <property name="$shortcutReference" value="true" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Karts:ImBase_TLB.IImbaseFilterService">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseFilterService.OnFilterRecord(ImBase_TLB.IImbaseDataSet)" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Karts:ImBase_TLB.CoImbaseQuery">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.CoImbaseQuery.Create()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.CoImbaseQuery.CreateRemote(System.string)" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Karts:ImBase_TLB.TImbaseFolders">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.TImbaseFolders.FIntf" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseFolders.GetDefaultInterface()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseFolders.InitServerData()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseFolders.Get_Application()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseFolders.Get_Parent()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseFolders.Get_Count()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseFolders.Get_Catalog()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseFolders.Create(System.Classes.TComponent)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseFolders.Destroy()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseFolders.Connect()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseFolders.ConnectTo(ImBase_TLB.IImbaseFolders)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseFolders.Disconnect()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseFolders.Item(System.OleVariant)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseFolders.Refresh()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseFolders.Add(System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseFolders.FindFolder(System.OleVariant,Winapi.ActiveX.TOleEnum)" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseFolders.DefaultInterface" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseFolders.Application" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseFolders.Parent" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseFolders.Count" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseFolders.Catalog" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.TImbaseFolders.FIntf" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.TImbaseFolders.DefaultInterface" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.TImbaseFolders.Application" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.TImbaseFolders.Parent" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.TImbaseFolders.Catalog" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Karts:ImBase_TLB.IImbaseFieldsInfoDisp">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseFieldsInfoDisp.Table" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseFieldsInfoDisp.Count" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseFieldsInfoDisp.Item(System.OleVariant)" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.IImbaseFieldsInfoDisp.Table" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Karts:ImBase_TLB.IImbaseCatalogDisp">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseCatalogDisp.Folders" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseCatalogDisp.Application" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseCatalogDisp.Parent" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseCatalogDisp.FindFolder(System.OleVariant,Winapi.ActiveX.TOleEnum)" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseCatalogDisp.Name" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseCatalogDisp.Type_" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseCatalogDisp.TableName" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseCatalogDisp.Attributes" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseCatalogDisp.TableId" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseCatalogDisp.FindFolders(System.OleVariant,Winapi.ActiveX.TOleEnum)" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseCatalogDisp.ImageId" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseCatalogDisp.NoteId" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseCatalogDisp.DataSet" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.IImbaseCatalogDisp.Folders" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.IImbaseCatalogDisp.Application" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.IImbaseCatalogDisp.Parent" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.IImbaseCatalogDisp.Type_" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.IImbaseCatalogDisp.DataSet" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Karts:ImBase_TLB.TImbaseFieldsInfo">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.TImbaseFieldsInfo.FIntf" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseFieldsInfo.GetDefaultInterface()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseFieldsInfo.InitServerData()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseFieldsInfo.Get_Table()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseFieldsInfo.Get_Count()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseFieldsInfo.Create(System.Classes.TComponent)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseFieldsInfo.Destroy()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseFieldsInfo.Connect()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseFieldsInfo.ConnectTo(ImBase_TLB.IImbaseFieldsInfo)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseFieldsInfo.Disconnect()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseFieldsInfo.Item(System.OleVariant)" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseFieldsInfo.DefaultInterface" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseFieldsInfo.Table" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseFieldsInfo.Count" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.TImbaseFieldsInfo.FIntf" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.TImbaseFieldsInfo.DefaultInterface" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.TImbaseFieldsInfo.Table" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Karts:ImBase_TLB.TImbaseUtils">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.TImbaseUtils.FIntf" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseUtils.GetDefaultInterface()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseUtils.InitServerData()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseUtils.Get_Application()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseUtils.Create(System.Classes.TComponent)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseUtils.Destroy()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseUtils.Connect()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseUtils.ConnectTo(ImBase_TLB.IImbaseUtils)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseUtils.Disconnect()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseUtils.CreateUUID()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseUtils.ExploreKey(System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseUtils.StartTransaction()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseUtils.Commit()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseUtils.Rollback()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseUtils.InTransaction(out@System.WordBool)" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseUtils.DefaultInterface" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseUtils.Application" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.TImbaseUtils.FIntf" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.TImbaseUtils.DefaultInterface" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.TImbaseUtils.Application" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Karts:ImBase_TLB.IImbaseBlobs">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseBlobs.AddFromFile(System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseBlobs.AddBlobRef(System.Integer)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseBlobs.ReleaseBlob(System.Integer)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseBlobs.UpdateBlob(System.Integer,System.WideString,Winapi.ActiveX.TOleEnum)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseBlobs.ExtractBlob(System.Integer,out@System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseBlobs.FindBlob(System.WideString,Winapi.ActiveX.TOleEnum)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseBlobs.BlobName(System.Integer)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseBlobs.AddFromData(System.WideString,System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseBlobs.BlobExists(System.Integer)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseBlobs.ExtractBlob2(System.Integer,out@System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseBlobs.AddFromData2(System.OleVariant,System.WideString)" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Karts:ImBase_TLB.TImbaseRawTable">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.TImbaseRawTable.FIntf" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseRawTable.GetDefaultInterface()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseRawTable.InitServerData()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseRawTable.Get_Application()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseRawTable.Get_Database()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseRawTable.Get_Active()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseRawTable.Set_Active(System.WordBool)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseRawTable.Get_RecordCount()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseRawTable.Get_Bof()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseRawTable.Get_Eof()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseRawTable.Get_Fields()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseRawTable.Get_FieldDefs()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseRawTable.Set_FieldDefs(ImBase_TLB.IImbaseFieldDefs)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseRawTable.Get_Values(System.OleVariant)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseRawTable.Set_Values(System.OleVariant,System.OleVariant)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseRawTable.Get_FieldCount()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseRawTable.Get_Bookmark()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseRawTable.Set_Bookmark(System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseRawTable.Get_State()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseRawTable.Get_CachedUpdates()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseRawTable.Set_CachedUpdates(System.WordBool)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseRawTable.Get_UpdatesPending()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseRawTable.Get_TableName()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseRawTable.Set_TableName(System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseRawTable.Get_Exists()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseRawTable.Get_TableId()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseRawTable.Get_Name()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseRawTable.Set_Name(System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseRawTable.Get_Registered()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseRawTable.Get_ImageId()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseRawTable.Set_ImageId(System.Integer)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseRawTable.Get_NoteId()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseRawTable.Set_NoteId(System.Integer)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseRawTable.Get_Attributes()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseRawTable.Set_Attributes(System.Integer)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseRawTable.Get_FieldsInfo()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseRawTable.Create(System.Classes.TComponent)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseRawTable.Destroy()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseRawTable.Connect()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseRawTable.ConnectTo(ImBase_TLB.IImbaseRawTable)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseRawTable.Disconnect()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseRawTable.Open()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseRawTable.Close()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseRawTable.First()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseRawTable.Next()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseRawTable.Last()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseRawTable.Prior()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseRawTable.Append()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseRawTable.Insert()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseRawTable.Edit()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseRawTable.Post()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseRawTable.Cancel()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseRawTable.Delete()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseRawTable.Locate(System.WideString,System.OleVariant,System.Integer)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseRawTable.ApplyUpdates()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseRawTable.CancelUpdates()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseRawTable.CreateTable()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseRawTable.DeleteTable()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseRawTable.Bind()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseRawTable.CreateCopy(System.WideString,System.WideString,System.WordBool)" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseRawTable.DefaultInterface" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseRawTable.Application" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseRawTable.Database" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseRawTable.RecordCount" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseRawTable.Bof" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseRawTable.Eof" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseRawTable.Fields" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseRawTable.Values[System.OleVariant]" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseRawTable.FieldCount" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseRawTable.State" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseRawTable.UpdatesPending" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseRawTable.Exists" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseRawTable.TableId" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseRawTable.Registered" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseRawTable.FieldsInfo" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseRawTable.Active" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseRawTable.FieldDefs" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseRawTable.Bookmark" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseRawTable.CachedUpdates" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseRawTable.TableName" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseRawTable.Name" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseRawTable.ImageId" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseRawTable.NoteId" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseRawTable.Attributes" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.TImbaseRawTable.FIntf" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.TImbaseRawTable.DefaultInterface" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.TImbaseRawTable.Application" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.TImbaseRawTable.Database" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.TImbaseRawTable.Fields" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.TImbaseRawTable.State" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.TImbaseRawTable.FieldsInfo" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.TImbaseRawTable.FieldDefs" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Karts:ImBase_TLB.TImbaseDataSet">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.TImbaseDataSet.FIntf" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseDataSet.GetDefaultInterface()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseDataSet.InitServerData()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseDataSet.Get_Application()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseDataSet.Get_Database()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseDataSet.Get_Active()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseDataSet.Set_Active(System.WordBool)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseDataSet.Get_RecordCount()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseDataSet.Get_Bof()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseDataSet.Get_Eof()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseDataSet.Get_Fields()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseDataSet.Get_FieldDefs()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseDataSet.Set_FieldDefs(ImBase_TLB.IImbaseFieldDefs)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseDataSet.Get_Values(System.OleVariant)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseDataSet.Set_Values(System.OleVariant,System.OleVariant)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseDataSet.Get_FieldCount()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseDataSet.Get_Bookmark()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseDataSet.Set_Bookmark(System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseDataSet.Get_State()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseDataSet.Create(System.Classes.TComponent)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseDataSet.Destroy()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseDataSet.Connect()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseDataSet.ConnectTo(ImBase_TLB.IImbaseDataSet)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseDataSet.Disconnect()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseDataSet.Open()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseDataSet.Close()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseDataSet.First()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseDataSet.Next()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseDataSet.Last()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseDataSet.Prior()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseDataSet.Append()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseDataSet.Insert()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseDataSet.Edit()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseDataSet.Post()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseDataSet.Cancel()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseDataSet.Delete()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseDataSet.Locate(System.WideString,System.OleVariant,System.Integer)" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseDataSet.DefaultInterface" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseDataSet.Application" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseDataSet.Database" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseDataSet.RecordCount" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseDataSet.Bof" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseDataSet.Eof" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseDataSet.Fields" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseDataSet.Values[System.OleVariant]" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseDataSet.FieldCount" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseDataSet.State" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseDataSet.Active" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseDataSet.FieldDefs" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseDataSet.Bookmark" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.TImbaseDataSet.FIntf" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.TImbaseDataSet.DefaultInterface" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.TImbaseDataSet.Application" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.TImbaseDataSet.Database" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.TImbaseDataSet.Fields" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.TImbaseDataSet.State" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.TImbaseDataSet.FieldDefs" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Karts:ImBase_TLB.IImbaseTableInfoDisp">
      <property name="$shortcutReference" value="true" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Karts:ImBase_TLB.TImbaseKey">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.TImbaseKey.FIntf" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseKey.GetDefaultInterface()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseKey.InitServerData()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseKey.Get_CatalogId()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseKey.Get_RecordKey()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseKey.Get_FolderKey()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseKey.Get_Valid()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseKey.Get_ErrorCode()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseKey.Get_TableName()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseKey.Get_CatalogName()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseKey.Get_Path()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseKey.Get_Key()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseKey.Set_Key(System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseKey.Get_TableKey()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseKey.Get_TableId()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseKey.Get_CatalogRecCount()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseKey.Get_TableRecCount()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseKey.Get_CatalogRecStr()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseKey.Get_TableRecStr()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseKey.Create(System.Classes.TComponent)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseKey.Destroy()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseKey.Connect()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseKey.ConnectTo(ImBase_TLB.IImbaseKey)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseKey.Disconnect()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseKey.Explore(System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseKey.CatalogRecItem(System.OleVariant,out@System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseKey.TableRecItem(System.OleVariant,out@System.WideString)" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseKey.DefaultInterface" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseKey.CatalogId" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseKey.RecordKey" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseKey.FolderKey" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseKey.Valid" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseKey.ErrorCode" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseKey.TableName" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseKey.CatalogName" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseKey.Path" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseKey.TableKey" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseKey.TableId" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseKey.CatalogRecCount" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseKey.TableRecCount" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseKey.CatalogRecStr" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseKey.TableRecStr" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseKey.Key" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.TImbaseKey.FIntf" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.TImbaseKey.DefaultInterface" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.TImbaseKey.ErrorCode" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Karts:ImBase_TLB.ImbaseApplication">
      <property name="$shortcutReference" value="true" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Karts:ImBase_TLB.ImBaseLoadStatus">
      <property name="$shortcutReference" value="true" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Karts:ImBase_TLB.TImbaseTables">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.TImbaseTables.FIntf" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseTables.GetDefaultInterface()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseTables.InitServerData()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseTables.Get_Application()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseTables.Get_Count()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseTables.Create(System.Classes.TComponent)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseTables.Destroy()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseTables.Connect()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseTables.ConnectTo(ImBase_TLB.IImbaseTables)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseTables.Disconnect()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseTables.FindTable(System.OleVariant,Winapi.ActiveX.TOleEnum)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseTables.Item(System.Integer)" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseTables.DefaultInterface" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseTables.Application" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseTables.Count" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.TImbaseTables.FIntf" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.TImbaseTables.DefaultInterface" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.TImbaseTables.Application" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Karts:ImBase_TLB.IImbaseRecord">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseRecord.Get_Application()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseRecord.Get_DataSet()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseRecord.Get_Catalog()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseRecord.Get_Folder()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseRecord.Delete()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseRecord.Get_Values(System.OleVariant)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseRecord.Set_Values(System.OleVariant,System.OleVariant)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseRecord.Get_ValuesCount()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseRecord.Get_Key()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseRecord.Get_Table()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseRecord.ValueName(System.Integer)" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseRecord.Application" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseRecord.DataSet" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseRecord.Catalog" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseRecord.Folder" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseRecord.Values[System.OleVariant]" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseRecord.ValuesCount" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseRecord.Key" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseRecord.Table" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.IImbaseRecord.Application" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.IImbaseRecord.DataSet" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.IImbaseRecord.Catalog" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.IImbaseRecord.Folder" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.IImbaseRecord.Table" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Karts:ImBase_TLB.TImbaseApplication">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.TImbaseApplication.FIntf" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseApplication.GetDefaultInterface()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseApplication.InitServerData()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseApplication.InvokeEvent(System.Integer,ref@System.OleVariant[])" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseApplication.Get_Catalogs()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseApplication.Get_Tables()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseApplication.Get_Database()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseApplication.Get_Utilites()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseApplication.Get_Status()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseApplication.Get_Blobs()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseApplication.Get_APIVersion()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseApplication.Create(System.Classes.TComponent)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseApplication.Destroy()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseApplication.Connect()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseApplication.ConnectTo(ImBase_TLB.IImbaseApplication)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseApplication.Disconnect()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseApplication.Minimize()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseApplication.Restore()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseApplication.GetOMPSync(System.Integer)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseApplication.GetSqlServerType(out@System.Integer)" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseApplication.DefaultInterface" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseApplication.Catalogs" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseApplication.Tables" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseApplication.Database" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseApplication.Utilites" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseApplication.Status" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseApplication.Blobs" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseApplication.APIVersion" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.TImbaseApplication.FIntf" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.TImbaseApplication.DefaultInterface" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.TImbaseApplication.Catalogs" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.TImbaseApplication.Tables" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.TImbaseApplication.Database" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.TImbaseApplication.Utilites" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.TImbaseApplication.Status" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.TImbaseApplication.Blobs" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Karts:ImBase_TLB.IImbaseFieldDef">
      <property name="$shortcutReference" value="true" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Karts:ImBase_TLB.IImbaseQueryDisp">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseQueryDisp.sql" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseQueryDisp.Prepared" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseQueryDisp.Prepare()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseQueryDisp.ExecSQL()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseQueryDisp.ToDataPacket()" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseQueryDisp.Application" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseQueryDisp.Database" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseQueryDisp.Active" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseQueryDisp.Open()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseQueryDisp.Close()" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseQueryDisp.RecordCount" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseQueryDisp.First()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseQueryDisp.Next()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseQueryDisp.Last()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseQueryDisp.Prior()" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseQueryDisp.Bof" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseQueryDisp.Eof" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseQueryDisp.Append()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseQueryDisp.Insert()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseQueryDisp.Edit()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseQueryDisp.Post()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseQueryDisp.Cancel()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseQueryDisp.Delete()" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseQueryDisp.Fields" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseQueryDisp.FieldDefs" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseQueryDisp.Values[System.OleVariant]" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseQueryDisp.FieldCount" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseQueryDisp.Bookmark" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseQueryDisp.Locate(System.WideString,System.OleVariant,System.Integer)" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseQueryDisp.State" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.IImbaseQueryDisp.Application" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.IImbaseQueryDisp.Database" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.IImbaseQueryDisp.Fields" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.IImbaseQueryDisp.FieldDefs" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.IImbaseQueryDisp.State" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Karts:ImBase_TLB.CoImbaseDatabase">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.CoImbaseDatabase.Create()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.CoImbaseDatabase.CreateRemote(System.string)" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Karts:ImBase_TLB.TImbaseRecord">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.TImbaseRecord.FIntf" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseRecord.GetDefaultInterface()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseRecord.InitServerData()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseRecord.Get_Application()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseRecord.Get_DataSet()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseRecord.Get_Catalog()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseRecord.Get_Folder()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseRecord.Get_Values(System.OleVariant)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseRecord.Set_Values(System.OleVariant,System.OleVariant)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseRecord.Get_ValuesCount()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseRecord.Get_Key()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseRecord.Get_Table()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseRecord.Create(System.Classes.TComponent)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseRecord.Destroy()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseRecord.Connect()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseRecord.ConnectTo(ImBase_TLB.IImbaseRecord)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseRecord.Disconnect()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseRecord.Delete()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseRecord.ValueName(System.Integer)" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseRecord.DefaultInterface" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseRecord.Application" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseRecord.DataSet" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseRecord.Catalog" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseRecord.Folder" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseRecord.Values[System.OleVariant]" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseRecord.ValuesCount" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseRecord.Key" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseRecord.Table" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.TImbaseRecord.FIntf" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.TImbaseRecord.DefaultInterface" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.TImbaseRecord.Application" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.TImbaseRecord.DataSet" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.TImbaseRecord.Catalog" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.TImbaseRecord.Folder" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.TImbaseRecord.Table" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Karts:ImBase_TLB.CoImbaseTableInfo">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.CoImbaseTableInfo.Create()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.CoImbaseTableInfo.CreateRemote(System.string)" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Karts:ImBase_TLB.ImbaseFieldDef">
      <property name="$shortcutReference" value="true" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Karts:ImBase_TLB.TImDataBase">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.TImDataBase.FIntf" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImDataBase.GetDefaultInterface()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImDataBase.InitServerData()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImDataBase.Get_CadmechPath()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImDataBase.Set_CadmechPath(System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImDataBase.Create(System.Classes.TComponent)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImDataBase.Destroy()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImDataBase.Connect()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImDataBase.ConnectTo(ImBase_TLB.IImDataBase)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImDataBase.Disconnect()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImDataBase.MaterialEntry(System.WideString,ref@System.Integer)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImDataBase.CalcExpression(System.WideString,System.WideString,out@System.Double)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImDataBase.ShowUserGroupDialog(System.Integer,out@System.Integer)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImDataBase.Ready()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImDataBase.SelectCatalog(System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImDataBase.ShowTables(System.Integer,System.WideString,out@System.WideString,out@System.WideString,ref@System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImDataBase.GetKeyInfo(System.WideString,out@System.WideString,out@System.WideString,out@System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImDataBase.SelectFolder(System.Integer,System.WideString,System.WideString,ref@System.WideString,ref@System.WideString,ref@System.WideString,ref@System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImDataBase.ConvertOldKey(System.WideString,ref@System.WideString,ref@System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImDataBase.EnumCatalogs()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImDataBase.ShowKeysInfo(System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImDataBase.FindItemsByValue(System.Integer,System.WideString,System.WideString,out@System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImDataBase.FindItemByValue(System.WideString,System.WideString,out@System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImDataBase.FieldNamesById(System.Integer)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImDataBase.FieldNamesByName(System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImDataBase.GetKeyData(System.WideString,out@System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImDataBase.CommaTextToText(System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImDataBase.OpenQuery(System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImDataBase.ShowSlideTable(System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImDataBase.GetNextTableKey(System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImDataBase.OpenTable(System.Integer,System.Integer,out@System.WideString,out@System.Integer)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImDataBase.CloseTable(System.Integer)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImDataBase.GetFieldWithTableName(System.Integer)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImDataBase.SelectTable(System.Integer,System.WideString,out@System.Integer,out@System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImDataBase.ShowSlideMenu(System.WideString,System.WideString,System.WideString,System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImDataBase.ShowSlideTree(System.Integer,System.Integer,ref@System.WideString,ref@System.WideString,ref@System.WideString,ref@System.WideString,System.Integer)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImDataBase.SelectFromTable(System.Integer,System.WideString,System.Integer,System.WideString,out@System.WideString,out@System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImDataBase.ShowModelManager(System.WideString,System.WideString,System.WideString,System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImDataBase.Set2DPath(System.WideString,System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImDataBase.SelectFromTableVA(System.WideString,System.WideString,System.WideString,System.Integer,System.Integer,System.WideString,out@System.OleVariant)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImDataBase.BringToFront()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImDataBase.Minimize()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImDataBase.Restore()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImDataBase.SelectFromTable2(System.WideString,System.WideString,System.WideString,System.WideString,System.Integer,System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImDataBase.SelectFieldValue(System.WideString,System.WideString,System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImDataBase.TableFields(System.WideString,System.Integer)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImDataBase.HASHString(System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImDataBase.CompareStrHASH(System.WideString,System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImDataBase.GetPathInfo(System.WideString,ref@System.WideString,ref@System.WideString,ref@System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImDataBase.EditObjectSec(System.WideString,System.Integer,System.WordBool)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImDataBase.MultiSelect(System.Integer,System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImDataBase.GetSearchImporter()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImDataBase.UserInGroups(System.Integer)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImDataBase.FindAllItems(System.Integer,System.WideString,System.WideString,out@System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImDataBase.HasAccessToTable(System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImDataBase.UpdateModified(System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImDataBase.CreateSlideMenuItem(System.WideString,System.WideString,System.WideString,out@System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImDataBase.ReadSlideItem(System.WideString,System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImDataBase.WriteSlideItem(System.WideString,System.WideString,System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImDataBase.OpenInEditor(System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImDataBase.GetKeyDataEx(System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImDataBase.OpenQuery2(System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImDataBase.GetTableData(System.Integer,System.Integer,out@System.Integer)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImDataBase.ExecuteScalar(System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImDataBase.ExecuteStatement(System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImDataBase.OpenQuery3(System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImDataBase.GetListForAlias(System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImDataBase.SelectTable2(System.WideString,System.WideString,out@System.Integer,out@System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImDataBase.SelectCadmechTemplate(System.Integer,System.WideString,System.WordBool,out@System.Integer)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImDataBase.UpdateTableStructure(System.Integer,System.WideString,System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImDataBase.UseDisabledRecords(System.Integer)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImDataBase.CreateExportTable(System.WideString,System.Integer)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImDataBase.UpdateExportTable(System.WideString,System.Integer)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImDataBase.ImportExportTable(System.WideString,System.Integer)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImDataBase.FindItemByValue2(System.WideString,System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImDataBase.FieldSize(System.WideString,System.WideString)" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImDataBase.DefaultInterface" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImDataBase.CadmechPath" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.TImDataBase.FIntf" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.TImDataBase.DefaultInterface" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Karts:ImBase_TLB.TImbaseFieldInfo">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.TImbaseFieldInfo.FIntf" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseFieldInfo.GetDefaultInterface()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseFieldInfo.InitServerData()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseFieldInfo.Get_FieldName()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseFieldInfo.Get_Name()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseFieldInfo.Set_Name(System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseFieldInfo.Get_ShortName()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseFieldInfo.Set_ShortName(System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseFieldInfo.Get_Units()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseFieldInfo.Set_Units(System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseFieldInfo.Get_Owner()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseFieldInfo.Get_Data()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseFieldInfo.Set_Data(System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseFieldInfo.Get_DataTypeEx()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseFieldInfo.Set_DataTypeEx(Winapi.ActiveX.TOleEnum)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseFieldInfo.Get_EnterMode()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseFieldInfo.Set_EnterMode(Winapi.ActiveX.TOleEnum)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseFieldInfo.Create(System.Classes.TComponent)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseFieldInfo.Destroy()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseFieldInfo.Connect()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseFieldInfo.ConnectTo(ImBase_TLB.IImbaseFieldInfo)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseFieldInfo.Disconnect()" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseFieldInfo.DefaultInterface" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseFieldInfo.FieldName" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseFieldInfo.Owner" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseFieldInfo.Name" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseFieldInfo.ShortName" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseFieldInfo.Units" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseFieldInfo.Data" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseFieldInfo.DataTypeEx" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseFieldInfo.EnterMode" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.TImbaseFieldInfo.FIntf" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.TImbaseFieldInfo.DefaultInterface" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.TImbaseFieldInfo.Owner" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.TImbaseFieldInfo.DataTypeEx" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.TImbaseFieldInfo.EnterMode" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Karts:ImBase_TLB.IImbaseFieldDisp">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseFieldDisp.Application" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseFieldDisp.DataSet" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseFieldDisp.AsInteger" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseFieldDisp.AsFloat" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseFieldDisp.AsString" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseFieldDisp.Value" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseFieldDisp.Clear()" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseFieldDisp.DataSize" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseFieldDisp.DataType" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseFieldDisp.FieldName" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseFieldDisp.AsBoolean" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseFieldDisp.IsNull" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseFieldDisp.AsDateTime" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseFieldDisp.FieldKind" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseFieldDisp.Visible" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.IImbaseFieldDisp.Application" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.IImbaseFieldDisp.DataSet" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.IImbaseFieldDisp.AsDateTime" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.IImbaseFieldDisp.FieldKind" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Karts:ImBase_TLB.IOMPSyncDisp">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IOMPSyncDisp.Insert(System.WideString,System.WideString,System.WideString,ref@System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IOMPSyncDisp.Modify(System.WideString,System.WideString,System.WideString,ref@System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IOMPSyncDisp.Delete(System.WideString,ref@System.WideString)" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Karts:ImBase_TLB.IImbaseQuery">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseQuery.Get_sql()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseQuery.Set_sql(System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseQuery.Get_Prepared()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseQuery.Set_Prepared(System.WordBool)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseQuery.Prepare()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseQuery.ExecSQL()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseQuery.ToDataPacket()" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseQuery.sql" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseQuery.Prepared" />
      <reference referencedUin="delphi:l_gnt:src:Karts:ImBase_TLB.IImbaseQuery:ImBase_TLB.IImbaseDataSet" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Karts:ImBase_TLB.ISearchImporterDisp">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.ISearchImporterDisp.AddArt(System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.ISearchImporterDisp.FindArt(System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.ISearchImporterDisp.UpdateArt(System.WideString,System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.ISearchImporterDisp.DeleteArt(System.WideString)" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Karts:ImBase_TLB.IImbaseDatabase">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseDatabase.Get_Application()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseDatabase.OpenQuery(System.WideString,System.Integer,System.Integer)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseDatabase.ExecSQL(System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseDatabase.GetTable()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseDatabase.GetNextTableName()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseDatabase.GetDataPacket(System.WideString)" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseDatabase.Application" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.IImbaseDatabase.Application" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Karts:ImBase_TLB.CoImbaseDataSet">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.CoImbaseDataSet.Create()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.CoImbaseDataSet.CreateRemote(System.string)" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Karts:ImBase_TLB.CoImbaseFolder">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.CoImbaseFolder.Create()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.CoImbaseFolder.CreateRemote(System.string)" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Karts:ImBase_TLB.IImbaseCatalogs">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseCatalogs.Get_Application()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseCatalogs.Get_Count()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseCatalogs.Item(System.OleVariant)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseCatalogs.FindCatalog(System.OleVariant,Winapi.ActiveX.TOleEnum)" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseCatalogs.Application" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseCatalogs.Count" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.IImbaseCatalogs.Application" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Karts:ImBase_TLB.IImbaseTablesDisp">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseTablesDisp.Application" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseTablesDisp.Count" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseTablesDisp.FindTable(System.OleVariant,Winapi.ActiveX.TOleEnum)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseTablesDisp.Item(System.Integer)" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.IImbaseTablesDisp.Application" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Karts:ImBase_TLB.CoImbaseUtils">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.CoImbaseUtils.Create()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.CoImbaseUtils.CreateRemote(System.string)" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Karts:ImBase_TLB.IImbaseFilterServiceDisp">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseFilterServiceDisp.OnFilterRecord(ImBase_TLB.IImbaseDataSet)" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Karts:ImBase_TLB.TImbaseTable">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.TImbaseTable.FIntf" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseTable.GetDefaultInterface()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseTable.InitServerData()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseTable.Get_Application()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseTable.Get_Database()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseTable.Get_Active()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseTable.Set_Active(System.WordBool)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseTable.Get_RecordCount()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseTable.Get_Bof()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseTable.Get_Eof()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseTable.Get_Fields()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseTable.Get_FieldDefs()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseTable.Set_FieldDefs(ImBase_TLB.IImbaseFieldDefs)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseTable.Get_Values(System.OleVariant)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseTable.Set_Values(System.OleVariant,System.OleVariant)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseTable.Get_FieldCount()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseTable.Get_Bookmark()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseTable.Set_Bookmark(System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseTable.Get_State()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseTable.Get_CachedUpdates()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseTable.Set_CachedUpdates(System.WordBool)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseTable.Get_UpdatesPending()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseTable.Get_TableName()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseTable.Set_TableName(System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseTable.Get_Exists()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseTable.Get_TableId()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseTable.Get_Name()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseTable.Set_Name(System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseTable.Get_Registered()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseTable.Get_ImageId()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseTable.Set_ImageId(System.Integer)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseTable.Get_NoteId()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseTable.Set_NoteId(System.Integer)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseTable.Get_Attributes()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseTable.Set_Attributes(System.Integer)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseTable.Get_FieldsInfo()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseTable.Get_Catalog()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseTable.Get_Record_()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseTable.Get_RecordEnabled()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseTable.Get_Folder()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseTable.Get_ValuesCount()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseTable.Get_ImbaseKey()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseTable.Create(System.Classes.TComponent)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseTable.Destroy()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseTable.Connect()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseTable.ConnectTo(ImBase_TLB.IImbaseTable)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseTable.Disconnect()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseTable.Open()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseTable.Close()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseTable.First()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseTable.Next()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseTable.Last()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseTable.Prior()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseTable.Append()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseTable.Insert()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseTable.Edit()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseTable.Post()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseTable.Cancel()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseTable.Delete()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseTable.Locate(System.WideString,System.OleVariant,System.Integer)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseTable.ApplyUpdates()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseTable.CancelUpdates()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseTable.CreateTable()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseTable.DeleteTable()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseTable.Bind()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseTable.CreateCopy(System.WideString,System.WideString,System.WordBool)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseTable.GetCDS()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseTable.ValueName(System.Integer,Winapi.ActiveX.TOleEnum)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseTable.Refresh()" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseTable.DefaultInterface" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseTable.Application" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseTable.Database" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseTable.RecordCount" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseTable.Bof" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseTable.Eof" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseTable.Fields" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseTable.Values[System.OleVariant]" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseTable.FieldCount" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseTable.State" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseTable.UpdatesPending" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseTable.Exists" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseTable.TableId" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseTable.Registered" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseTable.FieldsInfo" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseTable.Catalog" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseTable.Record_" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseTable.RecordEnabled" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseTable.Folder" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseTable.ValuesCount" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseTable.ImbaseKey" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseTable.Active" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseTable.FieldDefs" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseTable.Bookmark" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseTable.CachedUpdates" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseTable.TableName" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseTable.Name" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseTable.ImageId" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseTable.NoteId" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseTable.Attributes" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.TImbaseTable.FIntf" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.TImbaseTable.DefaultInterface" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.TImbaseTable.Application" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.TImbaseTable.Database" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.TImbaseTable.Fields" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.TImbaseTable.State" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.TImbaseTable.FieldsInfo" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.TImbaseTable.Catalog" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.TImbaseTable.Record_" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.TImbaseTable.Folder" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.TImbaseTable.FieldDefs" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Karts:ImBase_TLB.TImbaseTableInfo">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.TImbaseTableInfo.FIntf" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseTableInfo.GetDefaultInterface()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseTableInfo.InitServerData()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseTableInfo.Create(System.Classes.TComponent)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseTableInfo.Destroy()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseTableInfo.Connect()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseTableInfo.ConnectTo(ImBase_TLB.IImbaseTableInfo)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseTableInfo.Disconnect()" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseTableInfo.DefaultInterface" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.TImbaseTableInfo.FIntf" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.TImbaseTableInfo.DefaultInterface" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Karts:ImBase_TLB.CoImbaseTable">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.CoImbaseTable.Create()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.CoImbaseTable.CreateRemote(System.string)" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Karts:ImBase_TLB.TImbaseFieldDefs">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.TImbaseFieldDefs.FIntf" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseFieldDefs.GetDefaultInterface()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseFieldDefs.InitServerData()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseFieldDefs.Get_DataSet()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseFieldDefs.Get_Count()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseFieldDefs.Get_Item(System.Integer)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseFieldDefs.Create(System.Classes.TComponent)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseFieldDefs.Destroy()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseFieldDefs.Connect()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseFieldDefs.ConnectTo(ImBase_TLB.IImbaseFieldDefs)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseFieldDefs.Disconnect()" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseFieldDefs.DefaultInterface" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseFieldDefs.DataSet" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseFieldDefs.Count" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseFieldDefs.Item[System.Integer]" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.TImbaseFieldDefs.FIntf" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.TImbaseFieldDefs.DefaultInterface" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.TImbaseFieldDefs.DataSet" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.TImbaseFieldDefs.Item[System.Integer]" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Karts:ImBase_TLB.IImbaseKey">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseKey.Get_CatalogId()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseKey.Get_RecordKey()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseKey.Get_FolderKey()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseKey.Get_Valid()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseKey.Get_ErrorCode()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseKey.Explore(System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseKey.Get_TableName()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseKey.Get_CatalogName()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseKey.Get_Path()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseKey.Get_Key()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseKey.Set_Key(System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseKey.Get_TableKey()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseKey.Get_TableId()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseKey.Get_CatalogRecCount()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseKey.Get_TableRecCount()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseKey.CatalogRecItem(System.OleVariant,out@System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseKey.TableRecItem(System.OleVariant,out@System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseKey.Get_CatalogRecStr()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseKey.Get_TableRecStr()" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseKey.CatalogId" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseKey.RecordKey" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseKey.FolderKey" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseKey.Valid" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseKey.ErrorCode" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseKey.TableName" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseKey.CatalogName" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseKey.Path" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseKey.Key" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseKey.TableKey" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseKey.TableId" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseKey.CatalogRecCount" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseKey.TableRecCount" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseKey.CatalogRecStr" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseKey.TableRecStr" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.IImbaseKey.ErrorCode" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Karts:ImBase_TLB.TImbaseFieldDef">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.TImbaseFieldDef.FIntf" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseFieldDef.GetDefaultInterface()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseFieldDef.InitServerData()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseFieldDef.Create(System.Classes.TComponent)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseFieldDef.Destroy()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseFieldDef.Connect()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseFieldDef.ConnectTo(ImBase_TLB.IImbaseFieldDef)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseFieldDef.Disconnect()" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseFieldDef.DefaultInterface" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.TImbaseFieldDef.FIntf" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.TImbaseFieldDef.DefaultInterface" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Karts:ImBase_TLB.ImbaseTables">
      <property name="$shortcutReference" value="true" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Karts:ImBase_TLB.IImbaseUtils">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseUtils.Get_Application()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseUtils.CreateUUID()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseUtils.ExploreKey(System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseUtils.StartTransaction()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseUtils.Commit()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseUtils.Rollback()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseUtils.InTransaction(out@System.WordBool)" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseUtils.Application" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.IImbaseUtils.Application" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Karts:ImBase_TLB.IImbaseFolder">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseFolder.Get_Application()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseFolder.Get_Parent()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseFolder.Get_Folders()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseFolder.Get_Catalog()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseFolder.Add(System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseFolder.Get_Name()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseFolder.Set_Name(System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseFolder.Delete()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseFolder.Get_SubFoldersCount()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseFolder.Get_Attributes()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseFolder.Set_Attributes(System.Integer)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseFolder.Get_Level()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseFolder.Get_Key()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseFolder.Get_Path()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseFolder.Get_ImageId()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseFolder.Set_ImageId(System.Integer)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseFolder.Get_NoteId()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseFolder.Set_NoteId(System.Integer)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseFolder.Get_Records()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseFolder.Get_Property_()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseFolder.AddProperty()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseFolder.Move(ImBase_TLB.IImbaseFolder)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseFolder.AccessAdd(System.Integer,System.Integer,System.Integer)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseFolder.AccessRemove(System.Integer)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseFolder.Get_Sort()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseFolder.Set_Sort(System.Integer)" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseFolder.Application" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseFolder.Parent" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseFolder.Folders" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseFolder.Catalog" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseFolder.Name" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseFolder.SubFoldersCount" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseFolder.Attributes" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseFolder.Level" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseFolder.Key" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseFolder.Path" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseFolder.ImageId" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseFolder.NoteId" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseFolder.Records" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseFolder.Property_" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseFolder.Sort" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.IImbaseFolder.Application" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.IImbaseFolder.Parent" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.IImbaseFolder.Folders" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.IImbaseFolder.Catalog" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.IImbaseFolder.Records" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.IImbaseFolder.Property_" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Karts:ImBase_TLB.ImDataType">
      <property name="$shortcutReference" value="true" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Karts:ImBase_TLB.IImbaseTableInfo">
      <property name="$shortcutReference" value="true" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Karts:ImBase_TLB.TImbaseDatabase">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.TImbaseDatabase.FIntf" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseDatabase.GetDefaultInterface()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseDatabase.InitServerData()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseDatabase.Get_Application()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseDatabase.Create(System.Classes.TComponent)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseDatabase.Destroy()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseDatabase.Connect()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseDatabase.ConnectTo(ImBase_TLB.IImbaseDatabase)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseDatabase.Disconnect()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseDatabase.OpenQuery(System.WideString,System.Integer,System.Integer)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseDatabase.ExecSQL(System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseDatabase.GetTable()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseDatabase.GetNextTableName()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseDatabase.GetDataPacket(System.WideString)" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseDatabase.DefaultInterface" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseDatabase.Application" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.TImbaseDatabase.FIntf" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.TImbaseDatabase.DefaultInterface" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.TImbaseDatabase.Application" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Karts:ImBase_TLB.IImbaseApplicationDisp">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseApplicationDisp.Catalogs" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseApplicationDisp.Tables" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseApplicationDisp.Database" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseApplicationDisp.Utilites" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseApplicationDisp.Minimize()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseApplicationDisp.Restore()" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseApplicationDisp.Status" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseApplicationDisp.Blobs" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseApplicationDisp.APIVersion" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseApplicationDisp.GetOMPSync(System.Integer)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseApplicationDisp.GetSqlServerType(out@System.Integer)" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.IImbaseApplicationDisp.Catalogs" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.IImbaseApplicationDisp.Tables" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.IImbaseApplicationDisp.Database" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.IImbaseApplicationDisp.Utilites" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.IImbaseApplicationDisp.Status" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.IImbaseApplicationDisp.Blobs" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Karts:ImBase_TLB.CoImbaseFieldDef">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.CoImbaseFieldDef.Create()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.CoImbaseFieldDef.CreateRemote(System.string)" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Karts:ImBase_TLB.ImbaseField">
      <property name="$shortcutReference" value="true" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Karts:ImBase_TLB.CoImbaseCatalogs">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.CoImbaseCatalogs.Create()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.CoImbaseCatalogs.CreateRemote(System.string)" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Karts:ImBase_TLB.ImbaseFields">
      <property name="$shortcutReference" value="true" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Karts:ImBase_TLB.IImbaseCatalog">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseCatalog.Get_Folders()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseCatalog.Get_Application()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseCatalog.Get_Parent()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseCatalog.FindFolder(System.OleVariant,Winapi.ActiveX.TOleEnum)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseCatalog.Get_Name()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseCatalog.Set_Name(System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseCatalog.Get_type_()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseCatalog.Set_type_(Winapi.ActiveX.TOleEnum)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseCatalog.Get_TableName()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseCatalog.Get_Attributes()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseCatalog.Set_Attributes(System.Integer)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseCatalog.Get_TableId()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseCatalog.FindFolders(System.OleVariant,Winapi.ActiveX.TOleEnum)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseCatalog.Get_ImageId()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseCatalog.Set_ImageId(System.Integer)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseCatalog.Get_NoteId()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseCatalog.Set_NoteId(System.Integer)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseCatalog.Get_DataSet()" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseCatalog.Folders" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseCatalog.Application" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseCatalog.Parent" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseCatalog.Name" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseCatalog.Type_" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseCatalog.TableName" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseCatalog.Attributes" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseCatalog.TableId" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseCatalog.ImageId" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseCatalog.NoteId" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseCatalog.DataSet" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.IImbaseCatalog.Folders" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.IImbaseCatalog.Application" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.IImbaseCatalog.Parent" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.IImbaseCatalog.Type_" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.IImbaseCatalog.DataSet" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Karts:ImBase_TLB.ImKeyError">
      <property name="$shortcutReference" value="true" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Karts:ImBase_TLB.TImbaseRecords">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.TImbaseRecords.FIntf" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseRecords.GetDefaultInterface()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseRecords.InitServerData()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseRecords.Get_Application()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseRecords.Get_Folder()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseRecords.Get_Catalog()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseRecords.Get_Count()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseRecords.Create(System.Classes.TComponent)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseRecords.Destroy()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseRecords.Connect()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseRecords.ConnectTo(ImBase_TLB.IImbaseRecords)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseRecords.Disconnect()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseRecords.Add()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseRecords.Item(System.Integer)" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseRecords.DefaultInterface" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseRecords.Application" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseRecords.Folder" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseRecords.Catalog" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseRecords.Count" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.TImbaseRecords.FIntf" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.TImbaseRecords.DefaultInterface" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.TImbaseRecords.Application" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.TImbaseRecords.Folder" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.TImbaseRecords.Catalog" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Karts:ImBase_TLB.TImbaseCatalogs">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.TImbaseCatalogs.FIntf" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseCatalogs.GetDefaultInterface()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseCatalogs.InitServerData()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseCatalogs.Get_Application()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseCatalogs.Get_Count()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseCatalogs.Create(System.Classes.TComponent)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseCatalogs.Destroy()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseCatalogs.Connect()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseCatalogs.ConnectTo(ImBase_TLB.IImbaseCatalogs)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseCatalogs.Disconnect()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseCatalogs.Item(System.OleVariant)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseCatalogs.FindCatalog(System.OleVariant,Winapi.ActiveX.TOleEnum)" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseCatalogs.DefaultInterface" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseCatalogs.Application" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseCatalogs.Count" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.TImbaseCatalogs.FIntf" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.TImbaseCatalogs.DefaultInterface" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.TImbaseCatalogs.Application" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Karts:ImBase_TLB.IImbaseRecords">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseRecords.Get_Application()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseRecords.Add()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseRecords.Get_Folder()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseRecords.Get_Catalog()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseRecords.Get_Count()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseRecords.Item(System.Integer)" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseRecords.Application" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseRecords.Folder" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseRecords.Catalog" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseRecords.Count" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.IImbaseRecords.Application" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.IImbaseRecords.Folder" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.IImbaseRecords.Catalog" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Karts:ImBase_TLB.CoOMPSync">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.CoOMPSync.Create()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.CoOMPSync.CreateRemote(System.string)" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Karts:ImBase_TLB.ImLocateOptions">
      <property name="$shortcutReference" value="true" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Karts:ImBase_TLB.@unitclass">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.ImBaseMajorVersion" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.ImBaseMinorVersion" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.LIBID_ImBase" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.IID_IImDataBase" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.CLASS_ImDataBase" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.IID_IImbaseApplication" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.DIID_IImbaseApplicationEvents" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.CLASS_ImbaseApplication" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.IID_IImbaseCatalogs" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.CLASS_ImbaseCatalogs" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.IID_IImbaseCatalog" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.CLASS_ImbaseCatalog" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.IID_IImbaseFolders" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.CLASS_ImbaseFolders" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.IID_IImbaseFieldDefs" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.CLASS_ImbaseFieldDefs" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.IID_IImbaseFieldDef" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.CLASS_ImbaseFieldDef" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.IID_IImbaseField" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.CLASS_ImbaseField" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.IID_IImbaseFields" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.CLASS_ImbaseFields" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.IID_IImbaseDataSet" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.IID_IImbaseRawTable" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.IID_IImbaseTables" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.CLASS_ImbaseTables" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.IID_IImbaseTable" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.CLASS_ImbaseRawTable" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.IID_IImbaseRecord" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.CLASS_ImbaseRecord" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.IID_IImbaseFolder" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.CLASS_ImbaseFolder" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.CLASS_ImbaseTable" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.CLASS_ImbaseDataSet" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.IID_IImbaseQuery" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.CLASS_ImbaseQuery" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.IID_IImbaseDatabase" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.CLASS_ImbaseDatabase" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.IID_IImbaseTableInfo" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.CLASS_ImbaseTableInfo" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.IID_IImbaseUtils" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.CLASS_ImbaseUtils" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.IID_IImbaseBlobs" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.CLASS_ImbaseBlobs" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.IID_IImbaseKey" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.CLASS_ImbaseKey" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.IID_IImbaseRecords" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.CLASS_ImbaseRecords" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.IID_IImbaseFilterService" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.IID_IImbaseFieldsInfo" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.CLASS_ImbaseFieldsInfo" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.IID_IImbaseFieldInfo" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.CLASS_ImbaseFieldInfo" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.IID_IOMPSync" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.CLASS_OMPSync" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.IID_ISearchImporter" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.CLASS_SearchImporter" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.WaitForLogin" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.InternalException" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.InternalLoading" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.Ready" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.IFO_KEY" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.IFO_LEVEL" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.IFO_NAME" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.IFO_SHORTNAME" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.IFO_FIELDNAME" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.IFO_TABLENAME" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.IFO_ATTRIBUTES" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.IFO_PATH" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.ICT_UNDEFINED" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.ICT_CATALOG" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.ICT_REF" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.ICT_TECHREF" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.IST_READY" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.IST_WAITFORLOGIN" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.IST_INTERNALEXCEPTION" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.IST_INTERNALLOADING" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.iftUnknown" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.iftString" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.iftSmallint" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.iftInteger" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.iftWord" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.iftBoolean" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.iftFloat" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.iftDate" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.iftTime" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.iftDateTime" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.iftBytes" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.iftVarBytes" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.iftBlob" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.iftMemo" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.IFK_DATA" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.IFK_CALCULATED" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.IFK_LOOKUP" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.IFK_INTERNALCALC" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.IBT_FROMFILE" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.IBT_FROMDATA" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.ITF_CATALOG" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.ITF_READONLY" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.ITF_SYSTEM" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.ITF_HIDDEN" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.ITF_DESIGN" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.ITF_TECHNO" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.ITF_PRIVATE" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.ITF_UNDELETABLE" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.ITF_NOINDEXING" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.ITF_NOINDEXCHECK" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.ITF_TABLINKED" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.IKE_OK" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.IKE_ZEROLENGTH" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.IKE_OLDKEYNOTFOUND" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.IKE_BADSIGNATURE" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.IKE_BADCATALOGID" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.IKE_NOTABLEFIELD" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.IKE_BADCATALOGKEY" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.IKE_TABLENOTFOUND" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.IKE_BADTABLEKEY" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.IKE_BADKEYSIZE" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.ILO_CASEINSENSITIVE" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.ILO_PARTIALKEY" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.IEX_UNKNOWN" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.IEX_STRING" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.IEX_INTEGER" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.IEX_FLOAT" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.IEX_BOOL" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.IEX_REF" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.IEX_SET" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.IEX_ADT" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.IEM_UNKNOWN" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.IEM_SIMPLE" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.IEM_LIST" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.IEM_LISTONLY" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.IEM_ASPARENT" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.IEM_EXPRESSION" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.IEM_FOLDER" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.IEM_TABLE" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.IEM_BITSET" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.IEM_CHARSET" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.IEM_BOOLYN" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.IEM_BOOLPM" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.IEM_BOOLOTHER" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.IEM_RECORD" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.IEM_STRSET" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.IDS_INACTIVE" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.IDS_BROWSE" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.IDS_EDIT" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.IDS_INSERT" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.IDS_SETKEY" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.IDS_CALCFIELDS" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.IDS_FILTER" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.IDS_NEWVALUE" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.IDS_OLDVALUE" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.IDS_CURVALUE" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.IDS_BLOCKREAD" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.IDS_INTERNALCALC" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.IDS_OPENING" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.@unitclass.Register()" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.dtlServerPage" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.@unitclass.dtlOcxPage" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Karts:ImBase_TLB.ImBlobType">
      <property name="$shortcutReference" value="true" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Karts:ImBase_TLB.IImbaseRawTableDisp">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseRawTableDisp.ApplyUpdates()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseRawTableDisp.CancelUpdates()" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseRawTableDisp.CachedUpdates" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseRawTableDisp.UpdatesPending" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseRawTableDisp.TableName" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseRawTableDisp.Exists" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseRawTableDisp.CreateTable()" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseRawTableDisp.TableId" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseRawTableDisp.Name" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseRawTableDisp.Registered" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseRawTableDisp.DeleteTable()" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseRawTableDisp.ImageId" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseRawTableDisp.NoteId" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseRawTableDisp.Attributes" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseRawTableDisp.FieldsInfo" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseRawTableDisp.Bind()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseRawTableDisp.CreateCopy(System.WideString,System.WideString,System.WordBool)" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseRawTableDisp.Application" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseRawTableDisp.Database" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseRawTableDisp.Active" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseRawTableDisp.Open()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseRawTableDisp.Close()" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseRawTableDisp.RecordCount" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseRawTableDisp.First()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseRawTableDisp.Next()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseRawTableDisp.Last()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseRawTableDisp.Prior()" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseRawTableDisp.Bof" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseRawTableDisp.Eof" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseRawTableDisp.Append()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseRawTableDisp.Insert()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseRawTableDisp.Edit()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseRawTableDisp.Post()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseRawTableDisp.Cancel()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseRawTableDisp.Delete()" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseRawTableDisp.Fields" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseRawTableDisp.FieldDefs" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseRawTableDisp.Values[System.OleVariant]" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseRawTableDisp.FieldCount" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseRawTableDisp.Bookmark" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseRawTableDisp.Locate(System.WideString,System.OleVariant,System.Integer)" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseRawTableDisp.State" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.IImbaseRawTableDisp.FieldsInfo" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.IImbaseRawTableDisp.Application" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.IImbaseRawTableDisp.Database" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.IImbaseRawTableDisp.Fields" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.IImbaseRawTableDisp.FieldDefs" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.IImbaseRawTableDisp.State" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Karts:ImBase_TLB.IImbaseFieldsInfo">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseFieldsInfo.Get_Table()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseFieldsInfo.Get_Count()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseFieldsInfo.Item(System.OleVariant)" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseFieldsInfo.Table" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseFieldsInfo.Count" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.IImbaseFieldsInfo.Table" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Karts:ImBase_TLB.ImbaseBlobs">
      <property name="$shortcutReference" value="true" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Karts:ImBase_TLB.IImbaseFoldersDisp">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseFoldersDisp.Application" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseFoldersDisp.Parent" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseFoldersDisp.Count" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseFoldersDisp.Item(System.OleVariant)" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseFoldersDisp.Catalog" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseFoldersDisp.Refresh()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseFoldersDisp.Add(System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseFoldersDisp.FindFolder(System.OleVariant,Winapi.ActiveX.TOleEnum)" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.IImbaseFoldersDisp.Application" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.IImbaseFoldersDisp.Parent" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.IImbaseFoldersDisp.Catalog" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Karts:ImBase_TLB.IImDataBase">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImDataBase.MaterialEntry(System.WideString,ref@System.Integer)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImDataBase.CalcExpression(System.WideString,System.WideString,out@System.Double)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImDataBase.ShowUserGroupDialog(System.Integer,out@System.Integer)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImDataBase.Ready()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImDataBase.SelectCatalog(System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImDataBase.ShowTables(System.Integer,System.WideString,out@System.WideString,out@System.WideString,ref@System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImDataBase.GetKeyInfo(System.WideString,out@System.WideString,out@System.WideString,out@System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImDataBase.SelectFolder(System.Integer,System.WideString,System.WideString,ref@System.WideString,ref@System.WideString,ref@System.WideString,ref@System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImDataBase.ConvertOldKey(System.WideString,ref@System.WideString,ref@System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImDataBase.EnumCatalogs()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImDataBase.ShowKeysInfo(System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImDataBase.FindItemsByValue(System.Integer,System.WideString,System.WideString,out@System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImDataBase.FindItemByValue(System.WideString,System.WideString,out@System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImDataBase.FieldNamesById(System.Integer)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImDataBase.FieldNamesByName(System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImDataBase.GetKeyData(System.WideString,out@System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImDataBase.CommaTextToText(System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImDataBase.OpenQuery(System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImDataBase.ShowSlideTable(System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImDataBase.GetNextTableKey(System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImDataBase.OpenTable(System.Integer,System.Integer,out@System.WideString,out@System.Integer)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImDataBase.CloseTable(System.Integer)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImDataBase.GetFieldWithTableName(System.Integer)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImDataBase.SelectTable(System.Integer,System.WideString,out@System.Integer,out@System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImDataBase.ShowSlideMenu(System.WideString,System.WideString,System.WideString,System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImDataBase.ShowSlideTree(System.Integer,System.Integer,ref@System.WideString,ref@System.WideString,ref@System.WideString,ref@System.WideString,System.Integer)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImDataBase.SelectFromTable(System.Integer,System.WideString,System.Integer,System.WideString,out@System.WideString,out@System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImDataBase.ShowModelManager(System.WideString,System.WideString,System.WideString,System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImDataBase.Get_CadmechPath()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImDataBase.Set_CadmechPath(System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImDataBase.Set2DPath(System.WideString,System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImDataBase.SelectFromTableVA(System.WideString,System.WideString,System.WideString,System.Integer,System.Integer,System.WideString,out@System.OleVariant)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImDataBase.BringToFront()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImDataBase.Minimize()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImDataBase.Restore()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImDataBase.SelectFromTable2(System.WideString,System.WideString,System.WideString,System.WideString,System.Integer,System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImDataBase.SelectFieldValue(System.WideString,System.WideString,System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImDataBase.TableFields(System.WideString,System.Integer)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImDataBase.HASHString(System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImDataBase.CompareStrHASH(System.WideString,System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImDataBase.GetPathInfo(System.WideString,ref@System.WideString,ref@System.WideString,ref@System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImDataBase.EditObjectSec(System.WideString,System.Integer,System.WordBool)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImDataBase.MultiSelect(System.Integer,System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImDataBase.GetSearchImporter()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImDataBase.UserInGroups(System.Integer)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImDataBase.FindAllItems(System.Integer,System.WideString,System.WideString,out@System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImDataBase.HasAccessToTable(System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImDataBase.UpdateModified(System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImDataBase.CreateSlideMenuItem(System.WideString,System.WideString,System.WideString,out@System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImDataBase.ReadSlideItem(System.WideString,System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImDataBase.WriteSlideItem(System.WideString,System.WideString,System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImDataBase.OpenInEditor(System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImDataBase.GetKeyDataEx(System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImDataBase.OpenQuery2(System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImDataBase.GetTableData(System.Integer,System.Integer,out@System.Integer)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImDataBase.ExecuteScalar(System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImDataBase.ExecuteStatement(System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImDataBase.OpenQuery3(System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImDataBase.GetListForAlias(System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImDataBase.SelectTable2(System.WideString,System.WideString,out@System.Integer,out@System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImDataBase.SelectCadmechTemplate(System.Integer,System.WideString,System.WordBool,out@System.Integer)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImDataBase.UpdateTableStructure(System.Integer,System.WideString,System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImDataBase.UseDisabledRecords(System.Integer)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImDataBase.CreateExportTable(System.WideString,System.Integer)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImDataBase.UpdateExportTable(System.WideString,System.Integer)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImDataBase.ImportExportTable(System.WideString,System.Integer)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImDataBase.FindItemByValue2(System.WideString,System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImDataBase.FieldSize(System.WideString,System.WideString)" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImDataBase.CadmechPath" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Karts:ImBase_TLB.IImbaseRecordsDisp">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseRecordsDisp.Application" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseRecordsDisp.Add()" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseRecordsDisp.Folder" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseRecordsDisp.Catalog" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseRecordsDisp.Count" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseRecordsDisp.Item(System.Integer)" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.IImbaseRecordsDisp.Application" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.IImbaseRecordsDisp.Folder" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.IImbaseRecordsDisp.Catalog" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Karts:ImBase_TLB.IImbaseFields">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseFields.Get_Count()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseFields.Get_DataSet()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseFields.Item(System.OleVariant)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseFields.FindField(System.WideString)" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseFields.Count" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseFields.DataSet" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.IImbaseFields.DataSet" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Karts:ImBase_TLB.TImbaseCatalog">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.TImbaseCatalog.FIntf" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseCatalog.GetDefaultInterface()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseCatalog.InitServerData()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseCatalog.Get_Folders()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseCatalog.Get_Application()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseCatalog.Get_Parent()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseCatalog.Get_Name()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseCatalog.Set_Name(System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseCatalog.Get_type_()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseCatalog.Set_type_(Winapi.ActiveX.TOleEnum)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseCatalog.Get_TableName()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseCatalog.Get_Attributes()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseCatalog.Set_Attributes(System.Integer)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseCatalog.Get_TableId()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseCatalog.Get_ImageId()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseCatalog.Set_ImageId(System.Integer)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseCatalog.Get_NoteId()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseCatalog.Set_NoteId(System.Integer)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseCatalog.Get_DataSet()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseCatalog.Create(System.Classes.TComponent)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseCatalog.Destroy()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseCatalog.Connect()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseCatalog.ConnectTo(ImBase_TLB.IImbaseCatalog)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseCatalog.Disconnect()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseCatalog.FindFolder(System.OleVariant,Winapi.ActiveX.TOleEnum)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseCatalog.FindFolders(System.OleVariant,Winapi.ActiveX.TOleEnum)" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseCatalog.DefaultInterface" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseCatalog.Folders" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseCatalog.Application" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseCatalog.Parent" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseCatalog.TableName" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseCatalog.TableId" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseCatalog.DataSet" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseCatalog.Name" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseCatalog.Type_" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseCatalog.Attributes" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseCatalog.ImageId" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseCatalog.NoteId" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.TImbaseCatalog.FIntf" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.TImbaseCatalog.DefaultInterface" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.TImbaseCatalog.Folders" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.TImbaseCatalog.Application" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.TImbaseCatalog.Parent" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.TImbaseCatalog.DataSet" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.TImbaseCatalog.Type_" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Karts:ImBase_TLB.ImbaseUtils">
      <property name="$shortcutReference" value="true" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Karts:ImBase_TLB.ImFieldKind">
      <property name="$shortcutReference" value="true" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Karts:ImBase_TLB.IImbaseKeyDisp">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseKeyDisp.CatalogId" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseKeyDisp.RecordKey" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseKeyDisp.FolderKey" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseKeyDisp.Valid" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseKeyDisp.ErrorCode" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseKeyDisp.Explore(System.WideString)" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseKeyDisp.TableName" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseKeyDisp.CatalogName" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseKeyDisp.Path" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseKeyDisp.Key" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseKeyDisp.TableKey" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseKeyDisp.TableId" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseKeyDisp.CatalogRecCount" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseKeyDisp.TableRecCount" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseKeyDisp.CatalogRecItem(System.OleVariant,out@System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseKeyDisp.TableRecItem(System.OleVariant,out@System.WideString)" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseKeyDisp.CatalogRecStr" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseKeyDisp.TableRecStr" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.IImbaseKeyDisp.ErrorCode" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Karts:ImBase_TLB.IImbaseFieldDefs">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseFieldDefs.Get_DataSet()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseFieldDefs.Get_Count()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseFieldDefs.Get_Item(System.Integer)" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseFieldDefs.DataSet" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseFieldDefs.Count" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseFieldDefs.Item[System.Integer]" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.IImbaseFieldDefs.DataSet" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.IImbaseFieldDefs.Item[System.Integer]" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Karts:ImBase_TLB.CoImbaseCatalog">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.CoImbaseCatalog.Create()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.CoImbaseCatalog.CreateRemote(System.string)" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Karts:ImBase_TLB.IImDataBaseDisp">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImDataBaseDisp.MaterialEntry(System.WideString,ref@System.Integer)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImDataBaseDisp.CalcExpression(System.WideString,System.WideString,out@System.Double)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImDataBaseDisp.ShowUserGroupDialog(System.Integer,out@System.Integer)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImDataBaseDisp.Ready()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImDataBaseDisp.SelectCatalog(System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImDataBaseDisp.ShowTables(System.Integer,System.WideString,out@System.WideString,out@System.WideString,ref@System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImDataBaseDisp.GetKeyInfo(System.WideString,out@System.WideString,out@System.WideString,out@System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImDataBaseDisp.SelectFolder(System.Integer,System.WideString,System.WideString,ref@System.WideString,ref@System.WideString,ref@System.WideString,ref@System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImDataBaseDisp.ConvertOldKey(System.WideString,ref@System.WideString,ref@System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImDataBaseDisp.EnumCatalogs()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImDataBaseDisp.ShowKeysInfo(System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImDataBaseDisp.FindItemsByValue(System.Integer,System.WideString,System.WideString,out@System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImDataBaseDisp.FindItemByValue(System.WideString,System.WideString,out@System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImDataBaseDisp.FieldNamesById(System.Integer)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImDataBaseDisp.FieldNamesByName(System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImDataBaseDisp.GetKeyData(System.WideString,out@System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImDataBaseDisp.CommaTextToText(System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImDataBaseDisp.OpenQuery(System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImDataBaseDisp.ShowSlideTable(System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImDataBaseDisp.GetNextTableKey(System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImDataBaseDisp.OpenTable(System.Integer,System.Integer,out@System.WideString,out@System.Integer)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImDataBaseDisp.CloseTable(System.Integer)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImDataBaseDisp.GetFieldWithTableName(System.Integer)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImDataBaseDisp.SelectTable(System.Integer,System.WideString,out@System.Integer,out@System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImDataBaseDisp.ShowSlideMenu(System.WideString,System.WideString,System.WideString,System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImDataBaseDisp.ShowSlideTree(System.Integer,System.Integer,ref@System.WideString,ref@System.WideString,ref@System.WideString,ref@System.WideString,System.Integer)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImDataBaseDisp.SelectFromTable(System.Integer,System.WideString,System.Integer,System.WideString,out@System.WideString,out@System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImDataBaseDisp.ShowModelManager(System.WideString,System.WideString,System.WideString,System.WideString)" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImDataBaseDisp.CadmechPath" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImDataBaseDisp.Set2DPath(System.WideString,System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImDataBaseDisp.SelectFromTableVA(System.WideString,System.WideString,System.WideString,System.Integer,System.Integer,System.WideString,out@System.OleVariant)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImDataBaseDisp.BringToFront()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImDataBaseDisp.Minimize()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImDataBaseDisp.Restore()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImDataBaseDisp.SelectFromTable2(System.WideString,System.WideString,System.WideString,System.WideString,System.Integer,System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImDataBaseDisp.SelectFieldValue(System.WideString,System.WideString,System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImDataBaseDisp.TableFields(System.WideString,System.Integer)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImDataBaseDisp.HASHString(System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImDataBaseDisp.CompareStrHASH(System.WideString,System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImDataBaseDisp.GetPathInfo(System.WideString,ref@System.WideString,ref@System.WideString,ref@System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImDataBaseDisp.EditObjectSec(System.WideString,System.Integer,System.WordBool)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImDataBaseDisp.MultiSelect(System.Integer,System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImDataBaseDisp.GetSearchImporter()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImDataBaseDisp.UserInGroups(System.Integer)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImDataBaseDisp.FindAllItems(System.Integer,System.WideString,System.WideString,out@System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImDataBaseDisp.HasAccessToTable(System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImDataBaseDisp.UpdateModified(System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImDataBaseDisp.CreateSlideMenuItem(System.WideString,System.WideString,System.WideString,out@System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImDataBaseDisp.ReadSlideItem(System.WideString,System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImDataBaseDisp.WriteSlideItem(System.WideString,System.WideString,System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImDataBaseDisp.OpenInEditor(System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImDataBaseDisp.GetKeyDataEx(System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImDataBaseDisp.OpenQuery2(System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImDataBaseDisp.GetTableData(System.Integer,System.Integer,out@System.Integer)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImDataBaseDisp.ExecuteScalar(System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImDataBaseDisp.ExecuteStatement(System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImDataBaseDisp.OpenQuery3(System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImDataBaseDisp.GetListForAlias(System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImDataBaseDisp.SelectTable2(System.WideString,System.WideString,out@System.Integer,out@System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImDataBaseDisp.SelectCadmechTemplate(System.Integer,System.WideString,System.WordBool,out@System.Integer)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImDataBaseDisp.UpdateTableStructure(System.Integer,System.WideString,System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImDataBaseDisp.UseDisabledRecords(System.Integer)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImDataBaseDisp.CreateExportTable(System.WideString,System.Integer)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImDataBaseDisp.UpdateExportTable(System.WideString,System.Integer)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImDataBaseDisp.ImportExportTable(System.WideString,System.Integer)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImDataBaseDisp.FindItemByValue2(System.WideString,System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImDataBaseDisp.FieldSize(System.WideString,System.WideString)" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Karts:ImBase_TLB.ImbaseDataSet">
      <property name="$shortcutReference" value="true" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Karts:ImBase_TLB.IImbaseFieldDefsDisp">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseFieldDefsDisp.DataSet" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseFieldDefsDisp.Count" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseFieldDefsDisp.Item[System.Integer]" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.IImbaseFieldDefsDisp.DataSet" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.IImbaseFieldDefsDisp.Item[System.Integer]" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Karts:ImBase_TLB.ImbaseCatalogs">
      <property name="$shortcutReference" value="true" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Karts:ImBase_TLB.IImbaseFieldDefDisp">
      <property name="$shortcutReference" value="true" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Karts:ImBase_TLB.CoImbaseField">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.CoImbaseField.Create()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.CoImbaseField.CreateRemote(System.string)" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Karts:ImBase_TLB.TOMPSync">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.TOMPSync.FIntf" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TOMPSync.GetDefaultInterface()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TOMPSync.InitServerData()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TOMPSync.Create(System.Classes.TComponent)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TOMPSync.Destroy()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TOMPSync.Connect()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TOMPSync.ConnectTo(ImBase_TLB.IOMPSync)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TOMPSync.Disconnect()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TOMPSync.Insert(System.WideString,System.WideString,System.WideString,ref@System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TOMPSync.Modify(System.WideString,System.WideString,System.WideString,ref@System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TOMPSync.Delete(System.WideString,ref@System.WideString)" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TOMPSync.DefaultInterface" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.TOMPSync.FIntf" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.TOMPSync.DefaultInterface" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Karts:ImBase_TLB.ImbaseRecord">
      <property name="$shortcutReference" value="true" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Karts:ImBase_TLB.IImbaseDataSet">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseDataSet.Get_Application()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseDataSet.Get_Database()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseDataSet.Get_Active()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseDataSet.Set_Active(System.WordBool)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseDataSet.Open()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseDataSet.Close()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseDataSet.Get_RecordCount()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseDataSet.First()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseDataSet.Next()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseDataSet.Last()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseDataSet.Prior()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseDataSet.Get_Bof()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseDataSet.Get_Eof()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseDataSet.Append()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseDataSet.Insert()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseDataSet.Edit()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseDataSet.Post()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseDataSet.Cancel()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseDataSet.Delete()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseDataSet.Get_Fields()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseDataSet.Get_FieldDefs()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseDataSet.Set_FieldDefs(ImBase_TLB.IImbaseFieldDefs)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseDataSet.Get_Values(System.OleVariant)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseDataSet.Set_Values(System.OleVariant,System.OleVariant)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseDataSet.Get_FieldCount()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseDataSet.Get_Bookmark()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseDataSet.Set_Bookmark(System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseDataSet.Locate(System.WideString,System.OleVariant,System.Integer)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseDataSet.Get_State()" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseDataSet.Application" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseDataSet.Database" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseDataSet.Active" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseDataSet.RecordCount" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseDataSet.Bof" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseDataSet.Eof" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseDataSet.Fields" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseDataSet.FieldDefs" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseDataSet.Values[System.OleVariant]" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseDataSet.FieldCount" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseDataSet.Bookmark" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseDataSet.State" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.IImbaseDataSet.Application" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.IImbaseDataSet.Database" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.IImbaseDataSet.Fields" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.IImbaseDataSet.FieldDefs" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.IImbaseDataSet.State" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Karts:ImBase_TLB.ImEnterMode">
      <property name="$shortcutReference" value="true" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Karts:ImBase_TLB.CoImbaseRecords">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.CoImbaseRecords.Create()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.CoImbaseRecords.CreateRemote(System.string)" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Karts:ImBase_TLB.IImbaseTableDisp">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseTableDisp.Catalog" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseTableDisp.Record_" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseTableDisp.RecordEnabled" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseTableDisp.Folder" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseTableDisp.ValuesCount" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseTableDisp.ImbaseKey" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseTableDisp.GetCDS()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseTableDisp.ValueName(System.Integer,Winapi.ActiveX.TOleEnum)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseTableDisp.Refresh()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseTableDisp.ApplyUpdates()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseTableDisp.CancelUpdates()" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseTableDisp.CachedUpdates" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseTableDisp.UpdatesPending" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseTableDisp.TableName" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseTableDisp.Exists" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseTableDisp.CreateTable()" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseTableDisp.TableId" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseTableDisp.Name" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseTableDisp.Registered" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseTableDisp.DeleteTable()" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseTableDisp.ImageId" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseTableDisp.NoteId" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseTableDisp.Attributes" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseTableDisp.FieldsInfo" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseTableDisp.Bind()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseTableDisp.CreateCopy(System.WideString,System.WideString,System.WordBool)" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseTableDisp.Application" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseTableDisp.Database" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseTableDisp.Active" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseTableDisp.Open()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseTableDisp.Close()" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseTableDisp.RecordCount" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseTableDisp.First()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseTableDisp.Next()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseTableDisp.Last()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseTableDisp.Prior()" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseTableDisp.Bof" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseTableDisp.Eof" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseTableDisp.Append()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseTableDisp.Insert()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseTableDisp.Edit()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseTableDisp.Post()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseTableDisp.Cancel()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseTableDisp.Delete()" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseTableDisp.Fields" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseTableDisp.FieldDefs" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseTableDisp.Values[System.OleVariant]" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseTableDisp.FieldCount" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseTableDisp.Bookmark" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseTableDisp.Locate(System.WideString,System.OleVariant,System.Integer)" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseTableDisp.State" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.IImbaseTableDisp.Catalog" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.IImbaseTableDisp.Record_" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.IImbaseTableDisp.Folder" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.IImbaseTableDisp.FieldsInfo" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.IImbaseTableDisp.Application" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.IImbaseTableDisp.Database" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.IImbaseTableDisp.Fields" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.IImbaseTableDisp.FieldDefs" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.IImbaseTableDisp.State" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Karts:ImBase_TLB.IImbaseFieldsDisp">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseFieldsDisp.Count" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseFieldsDisp.DataSet" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseFieldsDisp.Item(System.OleVariant)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseFieldsDisp.FindField(System.WideString)" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.IImbaseFieldsDisp.DataSet" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Karts:ImBase_TLB.IImbaseApplicationEvents">
      <property name="$shortcutReference" value="true" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Karts:ImBase_TLB.CoImbaseFieldDefs">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.CoImbaseFieldDefs.Create()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.CoImbaseFieldDefs.CreateRemote(System.string)" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Karts:ImBase_TLB.ISearchImporter">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.ISearchImporter.AddArt(System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.ISearchImporter.FindArt(System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.ISearchImporter.UpdateArt(System.WideString,System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.ISearchImporter.DeleteArt(System.WideString)" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Karts:ImBase_TLB.TSearchImporter">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.TSearchImporter.FIntf" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TSearchImporter.GetDefaultInterface()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TSearchImporter.InitServerData()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TSearchImporter.Create(System.Classes.TComponent)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TSearchImporter.Destroy()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TSearchImporter.Connect()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TSearchImporter.ConnectTo(ImBase_TLB.ISearchImporter)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TSearchImporter.Disconnect()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TSearchImporter.AddArt(System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TSearchImporter.FindArt(System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TSearchImporter.UpdateArt(System.WideString,System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TSearchImporter.DeleteArt(System.WideString)" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TSearchImporter.DefaultInterface" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.TSearchImporter.FIntf" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.TSearchImporter.DefaultInterface" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Karts:ImBase_TLB.CoImbaseRecord">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.CoImbaseRecord.Create()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.CoImbaseRecord.CreateRemote(System.string)" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Karts:ImBase_TLB.IImbaseApplication">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseApplication.Get_Catalogs()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseApplication.Get_Tables()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseApplication.Get_Database()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseApplication.Get_Utilites()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseApplication.Minimize()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseApplication.Restore()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseApplication.Get_Status()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseApplication.Get_Blobs()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseApplication.Get_APIVersion()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseApplication.GetOMPSync(System.Integer)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseApplication.GetSqlServerType(out@System.Integer)" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseApplication.Catalogs" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseApplication.Tables" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseApplication.Database" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseApplication.Utilites" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseApplication.Status" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseApplication.Blobs" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseApplication.APIVersion" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.IImbaseApplication.Catalogs" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.IImbaseApplication.Tables" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.IImbaseApplication.Database" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.IImbaseApplication.Utilites" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.IImbaseApplication.Status" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.IImbaseApplication.Blobs" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Karts:ImBase_TLB.IImbaseTable">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseTable.Get_Catalog()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseTable.Get_Record_()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseTable.Get_RecordEnabled()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseTable.Get_Folder()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseTable.Get_ValuesCount()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseTable.Get_ImbaseKey()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseTable.GetCDS()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseTable.ValueName(System.Integer,Winapi.ActiveX.TOleEnum)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseTable.Refresh()" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseTable.Catalog" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseTable.Record_" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseTable.RecordEnabled" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseTable.Folder" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseTable.ValuesCount" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseTable.ImbaseKey" />
      <reference referencedUin="delphi:l_gnt:src:Karts:ImBase_TLB.IImbaseTable:ImBase_TLB.IImbaseRawTable" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.IImbaseTable.Catalog" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.IImbaseTable.Record_" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.IImbaseTable.Folder" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Karts:ImBase_TLB.ImbaseTableInfo">
      <property name="$shortcutReference" value="true" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Karts:ImBase_TLB.ImDataTypeEx">
      <property name="$shortcutReference" value="true" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Karts:ImBase_TLB.TImbaseBlobs">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.TImbaseBlobs.FIntf" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseBlobs.GetDefaultInterface()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseBlobs.InitServerData()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseBlobs.Create(System.Classes.TComponent)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseBlobs.Destroy()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseBlobs.Connect()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseBlobs.ConnectTo(ImBase_TLB.IImbaseBlobs)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseBlobs.Disconnect()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseBlobs.AddFromFile(System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseBlobs.AddBlobRef(System.Integer)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseBlobs.ReleaseBlob(System.Integer)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseBlobs.UpdateBlob(System.Integer,System.WideString,Winapi.ActiveX.TOleEnum)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseBlobs.ExtractBlob(System.Integer,out@System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseBlobs.FindBlob(System.WideString,Winapi.ActiveX.TOleEnum)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseBlobs.BlobName(System.Integer)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseBlobs.AddFromData(System.WideString,System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseBlobs.BlobExists(System.Integer)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseBlobs.ExtractBlob2(System.Integer,out@System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseBlobs.AddFromData2(System.OleVariant,System.WideString)" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseBlobs.DefaultInterface" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.TImbaseBlobs.FIntf" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.TImbaseBlobs.DefaultInterface" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Karts:ImBase_TLB.ImbaseRecords">
      <property name="$shortcutReference" value="true" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Karts:ImBase_TLB.CoImbaseFields">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.CoImbaseFields.Create()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.CoImbaseFields.CreateRemote(System.string)" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Karts:ImBase_TLB.SearchImporter">
      <property name="$shortcutReference" value="true" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Karts:ImBase_TLB.ImbaseQuery">
      <property name="$shortcutReference" value="true" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Karts:ImBase_TLB.IImbaseFieldInfo">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseFieldInfo.Get_FieldName()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseFieldInfo.Get_Name()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseFieldInfo.Set_Name(System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseFieldInfo.Get_ShortName()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseFieldInfo.Set_ShortName(System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseFieldInfo.Get_Units()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseFieldInfo.Set_Units(System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseFieldInfo.Get_Owner()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseFieldInfo.Get_Data()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseFieldInfo.Set_Data(System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseFieldInfo.Get_DataTypeEx()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseFieldInfo.Set_DataTypeEx(Winapi.ActiveX.TOleEnum)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseFieldInfo.Get_EnterMode()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseFieldInfo.Set_EnterMode(Winapi.ActiveX.TOleEnum)" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseFieldInfo.FieldName" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseFieldInfo.Name" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseFieldInfo.ShortName" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseFieldInfo.Units" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseFieldInfo.Owner" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseFieldInfo.Data" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseFieldInfo.DataTypeEx" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseFieldInfo.EnterMode" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.IImbaseFieldInfo.Owner" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.IImbaseFieldInfo.DataTypeEx" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.IImbaseFieldInfo.EnterMode" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Karts:ImBase_TLB.CoImbaseKey">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.CoImbaseKey.Create()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.CoImbaseKey.CreateRemote(System.string)" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Karts:ImBase_TLB.CoImDataBase">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.CoImDataBase.Create()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.CoImDataBase.CreateRemote(System.string)" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Karts:ImBase_TLB.CoImbaseApplication">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.CoImbaseApplication.Create()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.CoImbaseApplication.CreateRemote(System.string)" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Karts:ImBase_TLB.CoImbaseRawTable">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.CoImbaseRawTable.Create()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.CoImbaseRawTable.CreateRemote(System.string)" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Karts:ImBase_TLB.IImbaseFolders">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseFolders.Get_Application()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseFolders.Get_Parent()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseFolders.Get_Count()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseFolders.Item(System.OleVariant)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseFolders.Get_Catalog()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseFolders.Refresh()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseFolders.Add(System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseFolders.FindFolder(System.OleVariant,Winapi.ActiveX.TOleEnum)" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseFolders.Application" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseFolders.Parent" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseFolders.Count" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseFolders.Catalog" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.IImbaseFolders.Application" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.IImbaseFolders.Parent" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.IImbaseFolders.Catalog" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Karts:ImBase_TLB.IImbaseDatabaseDisp">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseDatabaseDisp.Application" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseDatabaseDisp.OpenQuery(System.WideString,System.Integer,System.Integer)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseDatabaseDisp.ExecSQL(System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseDatabaseDisp.GetTable()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseDatabaseDisp.GetNextTableName()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseDatabaseDisp.GetDataPacket(System.WideString)" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.IImbaseDatabaseDisp.Application" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Karts:ImBase_TLB.IImbaseRawTable">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseRawTable.ApplyUpdates()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseRawTable.CancelUpdates()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseRawTable.Get_CachedUpdates()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseRawTable.Set_CachedUpdates(System.WordBool)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseRawTable.Get_UpdatesPending()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseRawTable.Get_TableName()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseRawTable.Set_TableName(System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseRawTable.Get_Exists()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseRawTable.CreateTable()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseRawTable.Get_TableId()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseRawTable.Get_Name()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseRawTable.Set_Name(System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseRawTable.Get_Registered()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseRawTable.DeleteTable()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseRawTable.Get_ImageId()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseRawTable.Set_ImageId(System.Integer)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseRawTable.Get_NoteId()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseRawTable.Set_NoteId(System.Integer)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseRawTable.Get_Attributes()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseRawTable.Set_Attributes(System.Integer)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseRawTable.Get_FieldsInfo()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseRawTable.Bind()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseRawTable.CreateCopy(System.WideString,System.WideString,System.WordBool)" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseRawTable.CachedUpdates" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseRawTable.UpdatesPending" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseRawTable.TableName" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseRawTable.Exists" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseRawTable.TableId" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseRawTable.Name" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseRawTable.Registered" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseRawTable.ImageId" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseRawTable.NoteId" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseRawTable.Attributes" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseRawTable.FieldsInfo" />
      <reference referencedUin="delphi:l_gnt:src:Karts:ImBase_TLB.IImbaseRawTable:ImBase_TLB.IImbaseDataSet" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.IImbaseRawTable.FieldsInfo" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Karts:ImBase_TLB.ImbaseRawTable">
      <property name="$shortcutReference" value="true" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Karts:ImBase_TLB.IOMPSync">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IOMPSync.Insert(System.WideString,System.WideString,System.WideString,ref@System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IOMPSync.Modify(System.WideString,System.WideString,System.WideString,ref@System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IOMPSync.Delete(System.WideString,ref@System.WideString)" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Karts:ImBase_TLB.TImbaseQuery">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.TImbaseQuery.FIntf" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseQuery.GetDefaultInterface()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseQuery.InitServerData()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseQuery.Get_Application()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseQuery.Get_Database()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseQuery.Get_Active()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseQuery.Set_Active(System.WordBool)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseQuery.Get_RecordCount()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseQuery.Get_Bof()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseQuery.Get_Eof()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseQuery.Get_Fields()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseQuery.Get_FieldDefs()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseQuery.Set_FieldDefs(ImBase_TLB.IImbaseFieldDefs)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseQuery.Get_Values(System.OleVariant)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseQuery.Set_Values(System.OleVariant,System.OleVariant)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseQuery.Get_FieldCount()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseQuery.Get_Bookmark()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseQuery.Set_Bookmark(System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseQuery.Get_State()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseQuery.Get_sql()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseQuery.Set_sql(System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseQuery.Get_Prepared()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseQuery.Set_Prepared(System.WordBool)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseQuery.Create(System.Classes.TComponent)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseQuery.Destroy()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseQuery.Connect()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseQuery.ConnectTo(ImBase_TLB.IImbaseQuery)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseQuery.Disconnect()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseQuery.Open()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseQuery.Close()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseQuery.First()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseQuery.Next()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseQuery.Last()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseQuery.Prior()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseQuery.Append()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseQuery.Insert()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseQuery.Edit()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseQuery.Post()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseQuery.Cancel()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseQuery.Delete()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseQuery.Locate(System.WideString,System.OleVariant,System.Integer)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseQuery.Prepare()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseQuery.ExecSQL()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseQuery.ToDataPacket()" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseQuery.DefaultInterface" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseQuery.Application" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseQuery.Database" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseQuery.RecordCount" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseQuery.Bof" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseQuery.Eof" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseQuery.Fields" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseQuery.Values[System.OleVariant]" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseQuery.FieldCount" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseQuery.State" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseQuery.Active" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseQuery.FieldDefs" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseQuery.Bookmark" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseQuery.sql" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseQuery.Prepared" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.TImbaseQuery.FIntf" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.TImbaseQuery.DefaultInterface" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.TImbaseQuery.Application" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.TImbaseQuery.Database" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.TImbaseQuery.Fields" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.TImbaseQuery.State" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.TImbaseQuery.FieldDefs" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Karts:ImBase_TLB.TImbaseField">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.TImbaseField.FIntf" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseField.GetDefaultInterface()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseField.InitServerData()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseField.Get_Application()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseField.Get_DataSet()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseField.Get_AsInteger()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseField.Set_AsInteger(System.Integer)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseField.Get_AsFloat()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseField.Set_AsFloat(System.Double)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseField.Get_AsString()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseField.Set_AsString(System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseField.Get_Value()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseField.Set_Value(System.OleVariant)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseField.Get_DataSize()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseField.Get_DataType()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseField.Get_FieldName()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseField.Get_AsBoolean()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseField.Set_AsBoolean(System.WordBool)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseField.Get_IsNull()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseField.Get_AsDateTime()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseField.Set_AsDateTime(System.Double)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseField.Get_FieldKind()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseField.Get_Visible()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseField.Set_Visible(System.WordBool)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseField.Create(System.Classes.TComponent)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseField.Destroy()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseField.Connect()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseField.ConnectTo(ImBase_TLB.IImbaseField)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseField.Disconnect()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseField.Clear()" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseField.DefaultInterface" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseField.Application" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseField.DataSet" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseField.Value" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseField.DataSize" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseField.DataType" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseField.FieldName" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseField.IsNull" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseField.FieldKind" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseField.AsInteger" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseField.AsFloat" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseField.AsString" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseField.AsBoolean" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseField.AsDateTime" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseField.Visible" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.TImbaseField.FIntf" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.TImbaseField.DefaultInterface" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.TImbaseField.Application" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.TImbaseField.DataSet" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.TImbaseField.FieldKind" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.TImbaseField.AsDateTime" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Karts:ImBase_TLB.ImCatalogTypes">
      <property name="$shortcutReference" value="true" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Karts:ImBase_TLB.ImbaseCatalog">
      <property name="$shortcutReference" value="true" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Karts:ImBase_TLB.ImFindObject">
      <property name="$shortcutReference" value="true" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Karts:ImBase_TLB.ImbaseFieldsInfo">
      <property name="$shortcutReference" value="true" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Karts:ImBase_TLB.TImbaseFields">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.TImbaseFields.FIntf" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseFields.GetDefaultInterface()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseFields.InitServerData()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseFields.Get_Count()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseFields.Get_DataSet()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseFields.Create(System.Classes.TComponent)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseFields.Destroy()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseFields.Connect()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseFields.ConnectTo(ImBase_TLB.IImbaseFields)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseFields.Disconnect()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseFields.Item(System.OleVariant)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseFields.FindField(System.WideString)" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseFields.DefaultInterface" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseFields.Count" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseFields.DataSet" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.TImbaseFields.FIntf" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.TImbaseFields.DefaultInterface" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.TImbaseFields.DataSet" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Karts:ImBase_TLB.IImbaseUtilsDisp">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseUtilsDisp.Application" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseUtilsDisp.CreateUUID()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseUtilsDisp.ExploreKey(System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseUtilsDisp.StartTransaction()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseUtilsDisp.Commit()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseUtilsDisp.Rollback()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseUtilsDisp.InTransaction(out@System.WordBool)" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.IImbaseUtilsDisp.Application" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Karts:ImBase_TLB.ImbaseFolders">
      <property name="$shortcutReference" value="true" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Karts:ImBase_TLB.CoImbaseFolders">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.CoImbaseFolders.Create()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.CoImbaseFolders.CreateRemote(System.string)" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Karts:ImBase_TLB.ImbaseFieldInfo">
      <property name="$shortcutReference" value="true" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Karts:ImBase_TLB.IImbaseTables">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseTables.Get_Application()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseTables.Get_Count()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseTables.FindTable(System.OleVariant,Winapi.ActiveX.TOleEnum)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseTables.Item(System.Integer)" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseTables.Application" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseTables.Count" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.IImbaseTables.Application" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Karts:ImBase_TLB.ImDataBase">
      <property name="$shortcutReference" value="true" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Karts:ImBase_TLB.CoImbaseFieldInfo">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.CoImbaseFieldInfo.Create()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.CoImbaseFieldInfo.CreateRemote(System.string)" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Karts:ImBase_TLB.IImbaseField">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseField.Get_Application()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseField.Get_DataSet()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseField.Get_AsInteger()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseField.Set_AsInteger(System.Integer)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseField.Get_AsFloat()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseField.Set_AsFloat(System.Double)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseField.Get_AsString()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseField.Set_AsString(System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseField.Get_Value()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseField.Set_Value(System.OleVariant)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseField.Clear()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseField.Get_DataSize()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseField.Get_DataType()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseField.Get_FieldName()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseField.Get_AsBoolean()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseField.Set_AsBoolean(System.WordBool)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseField.Get_IsNull()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseField.Get_AsDateTime()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseField.Set_AsDateTime(System.Double)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseField.Get_FieldKind()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseField.Get_Visible()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseField.Set_Visible(System.WordBool)" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseField.Application" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseField.DataSet" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseField.AsInteger" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseField.AsFloat" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseField.AsString" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseField.Value" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseField.DataSize" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseField.DataType" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseField.FieldName" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseField.AsBoolean" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseField.IsNull" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseField.AsDateTime" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseField.FieldKind" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseField.Visible" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.IImbaseField.Application" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.IImbaseField.DataSet" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.IImbaseField.AsDateTime" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.IImbaseField.FieldKind" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Karts:ImBase_TLB.ImDateTime">
      <property name="$shortcutReference" value="true" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Karts:ImBase_TLB.ImbaseFolder">
      <property name="$shortcutReference" value="true" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Karts:ImBase_TLB.ImFileAtt">
      <property name="$shortcutReference" value="true" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Karts:ImBase_TLB.IImbaseRecordDisp">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseRecordDisp.Application" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseRecordDisp.DataSet" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseRecordDisp.Catalog" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseRecordDisp.Folder" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseRecordDisp.Delete()" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseRecordDisp.Values[System.OleVariant]" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseRecordDisp.ValuesCount" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseRecordDisp.Key" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseRecordDisp.Table" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseRecordDisp.ValueName(System.Integer)" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.IImbaseRecordDisp.Application" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.IImbaseRecordDisp.DataSet" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.IImbaseRecordDisp.Catalog" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.IImbaseRecordDisp.Folder" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.IImbaseRecordDisp.Table" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Karts:ImBase_TLB.CoImbaseFieldsInfo">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.CoImbaseFieldsInfo.Create()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.CoImbaseFieldsInfo.CreateRemote(System.string)" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Karts:ImBase_TLB.TImbaseFolder">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_field:src:Karts:ImBase_TLB.TImbaseFolder.FIntf" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseFolder.GetDefaultInterface()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseFolder.InitServerData()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseFolder.Get_Application()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseFolder.Get_Parent()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseFolder.Get_Folders()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseFolder.Get_Catalog()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseFolder.Get_Name()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseFolder.Set_Name(System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseFolder.Get_SubFoldersCount()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseFolder.Get_Attributes()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseFolder.Set_Attributes(System.Integer)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseFolder.Get_Level()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseFolder.Get_Key()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseFolder.Get_Path()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseFolder.Get_ImageId()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseFolder.Set_ImageId(System.Integer)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseFolder.Get_NoteId()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseFolder.Set_NoteId(System.Integer)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseFolder.Get_Records()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseFolder.Get_Property_()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseFolder.Get_Sort()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseFolder.Set_Sort(System.Integer)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseFolder.Create(System.Classes.TComponent)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseFolder.Destroy()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseFolder.Connect()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseFolder.ConnectTo(ImBase_TLB.IImbaseFolder)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseFolder.Disconnect()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseFolder.Add(System.WideString)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseFolder.Delete()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseFolder.AddProperty()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseFolder.Move(ImBase_TLB.IImbaseFolder)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseFolder.AccessAdd(System.Integer,System.Integer,System.Integer)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.TImbaseFolder.AccessRemove(System.Integer)" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseFolder.DefaultInterface" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseFolder.Application" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseFolder.Parent" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseFolder.Folders" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseFolder.Catalog" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseFolder.SubFoldersCount" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseFolder.Level" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseFolder.Key" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseFolder.Path" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseFolder.Records" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseFolder.Property_" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseFolder.Name" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseFolder.Attributes" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseFolder.ImageId" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseFolder.NoteId" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.TImbaseFolder.Sort" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.TImbaseFolder.FIntf" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.TImbaseFolder.DefaultInterface" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.TImbaseFolder.Application" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.TImbaseFolder.Parent" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.TImbaseFolder.Folders" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.TImbaseFolder.Catalog" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.TImbaseFolder.Records" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.TImbaseFolder.Property_" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Karts:ImBase_TLB.ImbaseKey">
      <property name="$shortcutReference" value="true" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Karts:ImBase_TLB.ImbaseDatabase">
      <property name="$shortcutReference" value="true" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Karts:ImBase_TLB.CoImbaseBlobs">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.CoImbaseBlobs.Create()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.CoImbaseBlobs.CreateRemote(System.string)" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Karts:ImBase_TLB.CoSearchImporter">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.CoSearchImporter.Create()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.CoSearchImporter.CreateRemote(System.string)" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Karts:ImBase_TLB.ImbaseStatus">
      <property name="$shortcutReference" value="true" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Karts:ImBase_TLB.IImbaseDataSetDisp">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseDataSetDisp.Application" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseDataSetDisp.Database" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseDataSetDisp.Active" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseDataSetDisp.Open()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseDataSetDisp.Close()" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseDataSetDisp.RecordCount" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseDataSetDisp.First()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseDataSetDisp.Next()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseDataSetDisp.Last()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseDataSetDisp.Prior()" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseDataSetDisp.Bof" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseDataSetDisp.Eof" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseDataSetDisp.Append()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseDataSetDisp.Insert()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseDataSetDisp.Edit()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseDataSetDisp.Post()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseDataSetDisp.Cancel()" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseDataSetDisp.Delete()" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseDataSetDisp.Fields" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseDataSetDisp.FieldDefs" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseDataSetDisp.Values[System.OleVariant]" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseDataSetDisp.FieldCount" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseDataSetDisp.Bookmark" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseDataSetDisp.Locate(System.WideString,System.OleVariant,System.Integer)" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseDataSetDisp.State" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.IImbaseDataSetDisp.Application" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.IImbaseDataSetDisp.Database" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.IImbaseDataSetDisp.Fields" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.IImbaseDataSetDisp.FieldDefs" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.IImbaseDataSetDisp.State" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Karts:ImBase_TLB.ImDataSetState">
      <property name="$shortcutReference" value="true" />
    </reference>
    <reference referencedUin="delphi:e_class:src:Karts:ImBase_TLB.IImbaseCatalogsDisp">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseCatalogsDisp.Application" />
      <reference referencedUin="delphi:e_property:src:Karts:ImBase_TLB.IImbaseCatalogsDisp.Count" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseCatalogsDisp.Item(System.OleVariant)" />
      <reference referencedUin="delphi:e_method:src:Karts:ImBase_TLB.IImbaseCatalogsDisp.FindCatalog(System.OleVariant,Winapi.ActiveX.TOleEnum)" />
      <reference referencedUin="delphi:l_ast:src:Karts:ImBase_TLB.IImbaseCatalogsDisp.Application" />
    </reference>
  </view>
</nodeSet>